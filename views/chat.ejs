<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WebChat Project - By Aula 32.2 / t3</title>
    <!-- Carrega o socket.io -->
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
  </head>

  <body>
    <div>
      <input data-testid="nickname-box" id="nickname" name="nickname" type="text" placeholder="Digite seu novo nickname" />
      <button data-testid="nickname-save" id="nickname-save" >Salvar</button>
    </div>
    <ul id="online-users-list">
      <% if (onlineUsers.length > 0) { %>
        <% onlineUsers.map((u) => { %>
          <li data-testid="online-user" id="<%=u.userId %>"><%=u.nickname%></li>
        <% }) %>
      <% } %>
    </ul>
    <div>
      <ul id="mensagens">
        <% if (allMessages) { %>
          <% console.log(allMessages) %>
          <% allMessages.map((m) => { %>
            <li data-testid="message">
              <%= `${m.dateFormat} - ${m.nickname}: ${m.chatMessage}`%>
            </li>
          <% }) %>
        <% } %>
      </ul>
    </div>
    <textarea data-testid="message-box" id="message-input"></textarea>
    <button data-testid="send-button" id="send-message">Enviar mensagem</button>
  </body>

  <!-- Configura interação com servidor -->
  <script>
    const socket = io('http://localhost:3000')

    const nicknameInput = document.getElementById('nickname');
    const nicknameBtn = document.getElementById('nickname-save');
    const messageInput = document.getElementById('message-input');
    const sendMessageBtn = document.getElementById('send-message');
    const userList = document.getElementById('online-users-list');

    let idUser;
    let nickname;
    let chatMessage = '';

    console.log('socket no client', socket);

    messageInput.addEventListener('change', (e) => chatMessage = e.target.value)

    nicknameBtn.addEventListener('click', () => {
      socket.nickname = nicknameInput.value;
      socket.emit('changedNickname', socket.nickname)
    })

    sendMessageBtn.addEventListener('click', () => {
      socket.emit('message', { chatMessage, nickname: socket.nickname })
    })

    socket.on('connected', ((userId) => idUser = userId ))

    socket.on('userConnected', (userId) => {
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'online-user');
      li.setAttribute('id', `${userId}`);
      li.innerHTML = userId;

      if (userId === idUser) {
        // https://stackoverflow.com/questions/2007357/how-to-set-dom-element-as-the-first-child
        userList.prepend(li);
      } else {
        userList.append(li);
      }
    })

    socket.on('changedNickname', ({ userId, nickname}) => {
      const user = document.getElementById(userId);
      user.innerText = nickname;
    })

    socket.on('message', (data) => {
      const li = document.createElement('li')
      li.setAttribute = ('data-testid', 'message')
      li.textContent = data
      document.getElementById('mensagens').appendChild(li)
    })

    socket.on('disconnectedUser', (userId) => {
      document.getElementById(userId).remove();
    })
  </script>
</html>